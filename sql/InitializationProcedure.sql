CREATE
OR REPLACE PROCEDURE create_gym_tables AS
BEGIN
EXECUTE IMMEDIATE '
CREATE TABLE USERS
    (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, password_hash VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, role VARCHAR(50), created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP)';

EXECUTE IMMEDIATE '
CREATE TABLE TRAINERS
    (trainer_id INT PRIMARY KEY, user_id INT UNIQUE, name VARCHAR(255), surname VARCHAR(255), specialization VARCHAR(255), contact VARCHAR(255), FOREIGN KEY (user_id) REFERENCES USERS (user_id) ON DELETE CASCADE)';

EXECUTE IMMEDIATE '
CREATE TABLE TRAINER_SESSIONS
    (schedule_id INT PRIMARY KEY, trainer_id INT, date DATE NOT NULL, start_time TIME NOT NULL, end_time TIME NOT NULL, FOREIGN KEY (trainer_id) REFERENCES TRAINERS (trainer_id) ON DELETE CASCADE)';

EXECUTE IMMEDIATE '
CREATE TABLE EXERCISES
    (exercise_id INT PRIMARY KEY, name VARCHAR(255) NOT NULL, description TEXT, muscle_group VARCHAR(100))';

EXECUTE IMMEDIATE '
CREATE TABLE WEIGHT_MEASUREMENTS
    (measurement_id INT PRIMARY KEY, user_id INT, measurement_date DATE NOT NULL, weight DECIMAL(5, 2), FOREIGN KEY (user_id) REFERENCES USERS (user_id) ON DELETE CASCADE)';

EXECUTE IMMEDIATE '
CREATE TABLE WEIGHT_LEADERBOARD
    (result_id INT PRIMARY KEY, user_id INT, exercise_id INT, measurement_date DATE NOT NULL, weight DECIMAL(5, 2), FOREIGN KEY (user_id) REFERENCES USERS (user_id) ON DELETE CASCADE, FOREIGN KEY (exercise_id) REFERENCES EXERCISES (exercise_id) ON DELETE CASCADE)';

EXECUTE IMMEDIATE '
CREATE TABLE TRAINING_PLANS
    (plan_id INT PRIMARY KEY, name VARCHAR(50) NOT NULL)';

EXECUTE IMMEDIATE '
CREATE TABLE PERSONAL_PLANS
    (personal_plan_id INT PRIMARY KEY, trainer_id INT, user_id INT, plan_id INT, FOREIGN KEY (trainer_id) REFERENCES TRAINERS (trainer_id) ON DELETE CASCADE, FOREIGN KEY (user_id) REFERENCES USERS (user_id) ON DELETE CASCADE, FOREIGN KEY (plan_id) REFERENCES TRAINING_PLANS (plan_id) ON DELETE CASCADE)';

EXECUTE IMMEDIATE '
CREATE TABLE TRAINING_EXERCISE
    (plan_id INT, exercise_id INT, PRIMARY KEY (plan_id, exercise_id), FOREIGN KEY (plan_id) REFERENCES TRAINING_PLANS (plan_id) ON DELETE CASCADE, FOREIGN KEY (exercise_id) REFERENCES EXERCISES (exercise_id) ON DELETE CASCADE)';

DBMS_OUTPUT
.
PUT_LINE
('Tabele zostały pomyślnie utworzone.');
EXCEPTION
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('Wystąpił błąd: ' || SQLERRM);
END create_gym_tables;
/
